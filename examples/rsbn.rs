extern crate clap;
extern crate rsgm;
extern crate serde;
extern crate serde_json;

use clap::Parser;
use rsgm::bayesian_network;
use std::fs;

/// Processes a JSON Bayesian network generated by `converter`
#[derive(Parser, Debug)]
#[clap(author, version, about, long_about = None)]
struct Args {
    /// A JSON Bayesian network file
    #[clap(short, long, value_parser)]
    file: String,
}

fn main() {
    let args = Args::parse();
    let str = fs::read_to_string(args.file).unwrap();
    let network = bayesian_network::BayesianNetwork::from_json(&str);
    println!("bn: {:?}", network);
    // println!("topo sort: {:?}", network.topological_sort());
    // let parent_assgn = HashMap::from([ (String::from("Erk"), String::from("HIGH")),
    //                                    (String::from("PKA"), String::from("HIGH")) ]);
    // println!("conditional prob: {:?}", network.get_conditional_prob(&String::from("Akt"), &String::from("LOW"), &parent_assgn));
}
